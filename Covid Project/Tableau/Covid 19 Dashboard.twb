<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.1pj717b1jh62od11s7o3o0jpnvea' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.0b2uhj61r2m0sv1ah3nyc0k7vlo4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Tableau/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0b2uhj61r2m0sv1ah3nyc0k7vlo4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='Highest_percentage_Infected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_percentage_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest_percentage_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_percentage_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.46' measure-ordering='alphabetic' measure-percentage='0.54' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Sheet1 (tableau table 1)' inline='true' name='federated.1voozjf13oa2rx1ajf4630hlmqaj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.0ogi2bl0hooab619qhep80n9ayqi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Tableau/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ogi2bl0hooab619qhep80n9ayqi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_new_cases' ordinal='0' />
            <column datatype='integer' name='Total_new_deaths' ordinal='1' />
            <column datatype='real' name='Percent_of_New_deaths' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_new_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_new_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_of_New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_of_New_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_of_New_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.421538' measure-ordering='alphabetic' measure-percentage='0.578462' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.1mfcn5401snw9510z2pyd0ysadb2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.03zpw8a06k5e4a10b2kxk0bfplkq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Tableau/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.03zpw8a06k5e4a10b2kxk0bfplkq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.48' measure-ordering='alphabetic' measure-percentage='0.52' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.11higck06t4i3413ufjud0v6lx9c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.0862u9o04174tj1h47ga00xn23ed'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Tableau/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0862u9o04174tj1h47ga00xn23ed' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D244:no:A1:D244:0' header='yes' outcome='6'>
            <column datatype='string' name='# Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='Highest_percentage_Infected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name># Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[# Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias># Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_percentage_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest_percentage_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_percentage_Infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D244:no:A1:D244:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[# Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.369231' measure-ordering='alphabetic' measure-percentage='0.630769' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 1)' name='federated.1voozjf13oa2rx1ajf4630hlmqaj' />
          </datasources>
          <datasource-dependencies datasource='federated.1voozjf13oa2rx1ajf4630hlmqaj'>
            <column datatype='real' name='[Percent_of_New_deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_new_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Percent_of_New_deaths]' derivation='Sum' name='[sum:Percent_of_New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_new_cases]' derivation='Sum' name='[sum:Total_new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_new_deaths]' derivation='Sum' name='[sum:Total_new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Percent_of_New_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Percent_of_New_deaths:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]' value='214' />
            <format attr='height' value='46' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Percent_of_New_deaths:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]' value='44' />
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='background-color' scope='cols' value='#00aaff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{51151E74-373F-49A3-9D00-E597422C6744}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Total Death Count for each Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.1mfcn5401snw9510z2pyd0ysadb2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mfcn5401snw9510z2pyd0ysadb2'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1mfcn5401snw9510z2pyd0ysadb2].[sum:TotalDeathCount:qk]' scope='rows' value='Total Death Count' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mfcn5401snw9510z2pyd0ysadb2].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{772E1512-75B6-4BB3-B7E1-4944F134DE16}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Percent People Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.11higck06t4i3413ufjud0v6lx9c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11higck06t4i3413ufjud0v6lx9c'>
            <column datatype='string' name='[# Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Highest_percentage_Infected]' role='measure' type='quantitative' />
            <column-instance column='[# Location]' derivation='None' name='[none:# Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Highest_percentage_Infected]' derivation='Sum' name='[sum:Highest_percentage_Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11higck06t4i3413ufjud0v6lx9c].[Longitude (generated)]' field-type='quantitative' max='56151632.291506171' min='38927700.265882164' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11higck06t4i3413ufjud0v6lx9c].[Latitude (generated)]' field-type='quantitative' max='7108227.0467882417' min='-3202697.7795447288' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' value='Highest percentage Infected'>
              <formatted-text>
                <run>Highest percentage Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11higck06t4i3413ufjud0v6lx9c].[none:# Location:nk]' />
              <color column='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' />
              <geometry column='[federated.11higck06t4i3413ufjud0v6lx9c].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11higck06t4i3413ufjud0v6lx9c].[Latitude (generated)]</rows>
        <cols>[federated.11higck06t4i3413ufjud0v6lx9c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{808A937C-DC92-4724-8B99-B6E1F2EFBBD8}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Percent People Infected from Jan 2020 to Apr 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.1pj717b1jh62od11s7o3o0jpnvea' />
          </datasources>
          <datasource-dependencies datasource='federated.1pj717b1jh62od11s7o3o0jpnvea'>
            <column datatype='real' name='[Highest_percentage_Infected]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Highest_percentage_Infected]' derivation='Max' forecast-column-base='[max:Highest_percentage_Infected:qk]' forecast-column-type='forecast-value' name='[fVal:max:Highest_percentage_Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Highest_percentage_Infected]' derivation='Max' name='[max:Highest_percentage_Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pj717b1jh62od11s7o3o0jpnvea].[tmn:date:qk]' scope='cols' value='Month' />
            <format attr='title' class='0' field='[federated.1pj717b1jh62od11s7o3o0jpnvea].[fVal:max:Highest_percentage_Infected:qk]' scope='rows' value='Highest percent Infected' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]' />
              <text column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]' />
              <text column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[fVal:max:Highest_percentage_Infected:qk]' />
              <color column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pj717b1jh62od11s7o3o0jpnvea].[fVal:max:Highest_percentage_Infected:qk]</rows>
        <cols>[federated.1pj717b1jh62od11s7o3o0jpnvea].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E432D00B-2A70-4325-9D07-AECD660990C4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='25' param='vert' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='23' param='vert' type='layout-flow' w='99034' x='483' y='929'>
              <zone h='98142' id='9' param='horz' type='layout-flow' w='99034' x='483' y='929'>
                <zone h='98142' id='7' type='layout-basic' w='90464' x='483' y='929'>
                  <zone h='36471' id='5' name='Sheet 2' w='45871' x='483' y='19859'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55401' id='6' name='Sheet 3' w='44593' x='46354' y='929'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42741' id='11' name='Sheet 4' w='76862' x='483' y='56330'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='18930' id='3' name='Sheet 1' w='45871' x='483' y='929'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42741' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]&#10;[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' type='color' w='13602' x='77345' y='56330'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='142' h='98142' id='8' is-fixed='true' param='vert' type='layout-flow' w='8570' x='90947' y='929'>
                  <zone h='8478' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' type='color' w='8570' x='90947' y='929'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='31' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='144' h='18930' id='3' is-fixed='true' name='Sheet 1' w='45871' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55401' id='6' is-fixed='true' name='Sheet 3' w='44593' x='46354' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' type='color' w='8570' x='90947' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36471' id='5' is-fixed='true' name='Sheet 2' w='45871' x='483' y='19859'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42741' id='11' is-fixed='true' name='Sheet 4' w='76862' x='483' y='56330'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='42741' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]&#10;[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' type='color' w='13602' x='77345' y='56330'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1D7D6C00-48A2-42CE-9AD6-7E5E078B264E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E7EC939-F544-4A1B-B20E-0884C536899B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]</field>
            <field>[federated.1mfcn5401snw9510z2pyd0ysadb2].[sum:TotalDeathCount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F52A4F67-25AE-4626-847A-2D6A05F5F729}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11higck06t4i3413ufjud0v6lx9c].[attr:# Location:nk]</field>
            <field>[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{28833B0F-1946-4B09-8101-7ACF575176D9}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]&#10;[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]</field>
            <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]</field>
            <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44B44A7F-9B76-4A23-9C2E-FE7499BADEE8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]</field>
              <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1AFDE5DD-7E21-46D9-9EFA-A7E02AB8C6D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd3wc1bmwnynbi3ZVVr3ZlgvujV5MD5ACCSVww82XnnBvyg1pdIeEckNJ
      Icnl5iYhkAIEEgi9Ggy44t5lq7dV1/bd2Z3y/bFylQS2kWSD5vlpNLNTzvuemfPOae+cIxiG
      YWBiMkERj7UCJibHEtMATCY0pgGYTGhMAzCZ0JgGYDKhOcgADMMg0tfF8uXL6ewLo6tRXnn5
      rSEXvfLSS6gjBNiw9V1qW/sASMX6WbtxGwbQ3d5CKKYcllLrVr5JdyR1JPEwMTkqDjKA5m0r
      uP7W+9B0nTfeeAtdi/H6qyvAMNB1HV3XAXjt1VfJ6Dq6YWAMHtM0HcMwaNq2jj1t/QD01m/g
      qms+z672EMufe4KtzX3ouo4B2fUB4e7dNgyDDaveoiuS3CfPMIx94RsHyMzu1zBbck2OFvnA
      H4/+6a/88Ke/JN28GZvLt29/y87V3P2bx7GQ5nPfvgk10c///Op+Nm2u49e//QUP/+ZntLV3
      MXPJZyk7RMA1//5vPPLQIywoyP7+wfe/z5333cfPfvB9vnbTDXz1K19nwfRK6no0KjwZiuZ9
      HIuu8PeHf0frru3cdPd9PP6bu1GQKZ11BjOsTTzy+i7yy2bgiuxEdwU45exLuPCMhWN9r0w+
      ghyUAwiCgGGAJIv86he/2Lf/paee4Bs33cUdP/oKT/zjZWRnLtd953ucPSeXrXVtDIRTWOwW
      Nq9bN0RATsl08tU29nRGh1WgesYC/uvb38AfKOK73/kaAx3tINq46v99jf+85mxeeOUVlq3d
      gmS18eLzzwAwdfEF3H3TdZSVlhCPxbHYbKN5T0wmEAcZwFXXXsUdN/yQ5o5e9ANKFQtPPonH
      H/4Df3z475x06iJ0JcKrL73I25uD5OvttCaszJxRc3B2cgBf+OK1PPqXxwAQkiGef+45tte3
      jayVkWHl8mX87Zl3OOu0U5lRM4kTTzmN/3fN5QBMnzEdAQ1foIKzT5nLc8+9+oFugsnERTjU
      FSLUG2TH7kamz5qH3y3T1NxFdVUZTXU7SYkupk+upKe7k7bmZspqZpKf42L39s14CopJp1R8
      DhHd7iPX60CJD9ATMygr9LNj80ZKp8xESA3Q0BHC77JSUlFOa3snlSX5NHX0UlmUS0dPFLdD
      prOjFVdeGZUlBSSiA2zeuouambOxZCKoVj95XgcD3e3sauxg3vz5OKwjmZ+JycgMMQATk4mE
      2Q9gMqExDcBkQrOv4KwbcMu2Y6mKyUSmygVfmTT+cvfVATQD5CfHXwETE4Az8uGts8dfrlkE
      MpnQmAZgMqE5MgNY8Xt47BZY99r+ff07oX7nASfp8OIvR0e7sebV+7Px2f7u/n3BTdDadPB5
      Lz7wweR0rYXVrw9zQIc1T4OagFcfPLIwNQWeuQNe/F/IjOSaOAKtq6GzY/hj6RD85YcQS+zf
      9+ovIByBDS8cvozuTbDqpeGPrf0nHCeN70fWe3Tq5+F334IFZ8FTt4Iig1+ELbvhk1+F9f+C
      2ZdDT9MBF2XgbzdBJgNnfwHe+jPULIHeRrDEofx06OuB0y/Nnt67A156GE6+EjY/A84qsCeg
      PwGLzoK3noB5l0LtC+CeCh/7/NHH/vwvwYO3w9Tp8NiPwFYEtEJTGi65DNY8C6d87ZD4AH+5
      DlICfOzr8OYjMOvj0L4Fumph3qlQdhEE/IABa/8MW9+AkvPgn7eAXAyzZsPKp2DGefDPn4LF
      Cdueh7ZaOPVT8O4rcNaXofw9aoW6Aj1hmGKHd1+Axreh+mzo2QKGBC4ZdD/4Jdi9A874DLz5
      BFhzQGiGiA++cCdYJDA0eO5uiKahZio07TpY1s5loPqgZytYNdj4Fsy/EGIZqH0RZp8KxedA
      cSB7/rq/wZZlUHgaPLUUxDyYuwDe+QfMOBf+eQdYAzDv9KN/dqPE0RWBUm2Q9IIPcJXAgs9A
      phcyCdjxziEnG6DoUFIGKx+HcBRaayHcCHEFVvwBfNX7T9/4LJz2dcj1QCIJu94AVw6Eg7D6
      SVAy0LwDnB4ItWZr7x+U4HrInQ/xdiiZCadcCeFOyERgz4ah5+sy+K2w+nFIGdC2HfoaIRqB
      jVsg37//3O1r4PyrIdYAm9ZBxw7obYN0HNq6oXpRNgEVzQaHBqIb1Hg2rPejYz0Eo6A0Qn8I
      2rZCsBbOuApaOuGCz8OKR0GLQetOyJ0OqX6ongsnfxbkwcef6oaIACUekPJgzgXgdu6X46uB
      VAuk0rDyb2CoEIvDlr9DIgUb10HuAXHethLO/RzEmmDLWujYDT0t2ZyurQuq58Oc00DLZJdj
      2Bd7hP4DIpTPAHs5eBWI2eHUC+DpB8A1G3LKwV8FaReo6WzEBB1KpkJeHlSfBWuehLIZYC2G
      lBcSA1A9FTKD3wosuAxe+T+YuQRkJ1TNgUwa7C5Y/HFY9TQUV0GwH+xuED5g9MunQcliWPvf
      4JsMU06D5/4KU6ohtxryi0CeBqqSzbYFCUqmg12E8tPg7b9C6Qngs0LRHNi0CowMZHRAgOkL
      Ye07UHUmSGmQigEV8qogUAaOKbB9LRTVgJCETDwbV+v7OPgJMiy+Gj72ZYi2Qkcwe19z/JBX
      DpMr4ZVH4PRroLEeAtUgJ8CageqTYNmz2ZxPEsGSC3lW6E7DnGmgpA94fiIUT4MZs2HZK7Dw
      Ati6DopnQNvbMOdy2Lwim5IySjbOM06Ed9+EqlPACkgFYOjgr4RAKbhmwpaV0PQ2uEQ49XpA
      +iAP8qgZo2ZQHd76PfT1gX8yLLnyvU/v2Q7vZD09OeXzUFQyWoqMHi//DBIalM6HEz/23udu
      fhoadoLghUv/Y3z0Oxre/A0MRCB/Gpzx6YOPvfW/0NcPuTVw1uXvH9bWZ6FuG8geuOgbIB9Z
      gj5WzaBmP4DJcYHZD2BicgzYVwcQMPhOycCx1MVkAlPuBMPwIwgfqFJ3xOwrAhmGQWPfYbQ8
      mJiMEdV53nE3ALMIZDKhMQ3AZEJz1N8R6lqGzWvXkEwn8QSmkGtTaO3oZ8b8BcR7Wgj2JVm4
      cO6+8/ta99AaEplVU8Sqt5cz/6yLsZNg/dp15ATKmD51ElomyaZ160kmYhRMmkssWEvGsDBz
      7jzqdmwhkUoze9EpeJ3WUYn8+6HE+lm/YRtFlZOZVFmKYahsWLWSlCax+JQT2bJmJYpuYfEp
      i9m6dhXO/HJmTM126m1dt4q4olEzcz7pUDvNbT1MnTOH5h2bSaUVXHlVzJk5eVzicbh0NNbS
      2NLJCQtOwu+xk06E2bBhMy5fITOnV7Ju1Rrs/kJmz5zOOJdUxoyjzgFEycL8U07HLQsUFOWx
      fU8L8xYtwOu04fHnEwru9zXR0gm272ki3ttHRtVxCRkSGdiw8h2qZy1gyqRKACSLg4WnnI5N
      EgkU+ojE0ixYvBi3y8mseQvIdUCwZ/wq6itXrmHOosVUlhVn4xHtpF/zkCtHaW5qZEDPwS+F
      WP/WqziqTqSlbmv2QsOgbyDE/EWLyfXa2bKzjnmLFuL3uJl/8um4ZYOCstJxi8fhsquukVNO
      W8ymdWsA2PbuKqYtOI1wZx2b162heMZCEn0tJDLaMdZ09PhARaB0rJe+jJuASyatxKmv3cnK
      NRvx5HgOOm/DyjfRdJ1du3Yg2FzIUvb1kcyo9AebeO2lV0kPnhvva0OxF+JzWCkpDrBn+wa2
      1DYx0NOB1e0jkUh+EJWPCN1QaW3YzeuvvYEBxEP9OO0yotVJsLUVp0NGsrmwl8xC79lJMj04
      kBdQUV5GQ0Mda99dh6rEqd+9mxUr16ImBuhOOSnOsY9bPA4XURIRJAuCkU3g0+afROuuDcQS
      CmlVx2aVkWUJTT9OPNlGAWnp0qVL9/4IJQ9v6MK91O/czrT5i7DbrKiJMJFIjNKqybTu2UZL
      Sxtufz6b12/k1LPPp7qqHLvdg1VMsm3bDqJJlXmzp9LU0Ibd6yMZbEB3Bwg21XHCvPmIeobm
      pkaisSRVVZW0NDQSicapmDQFt2N8xgHyOGTagz24/fm07tpG8dQZtNbtIZHKMHPBfIKNdSRS
      KtNnTqO7tZVAaRXprjp6dC/R7mai4TAVU2bhsmiEIxGKK2vob2+kZv5i7PLxV/1S4yF2bt/F
      5NmLaK3fRW6uj2BbJ97CMubOmsqmNWsQ7D4mVZV9MA+UEfA7bR+tZlBViTEQ1SjIz3nfc4Md
      7RSXHH/Fgr0crn7HezyOZ45FM6jZD2By3GD2A5iYjDMHNYOqqfGrYJqYDMU77hLNkeFMJjRm
      EchkQmMagMmExjQAkwmNaQAmExrTAEwmNKYBmExoTAMwmdCYBmAyodlvAIbBQ7+9lxtv+BG3
      3raUtzbWHnSilgyztbZpSAB6Jsm9D/x27y8e/p97WXr77Tz10nL09+lj62qpo7M/Bmjcf//9
      Q44nwj08+Kv7+Plvf08yox9+rPQ0m7fsOGjXo7//Bff/9s+Mjid7hJ/fM3Qsz962Ou69+07+
      8Oi/3vtyQ2fz5s0AtGxZzv89/tp7n38IHU176A7Fj+gak+HZ7w4tCMxffCq7336GC7+6lJOm
      FtIXbOHNFe9SWFLGtrf+wS2/fIxJUybhkVWWLVuOYfOQ67byxDMv8bHzzgF0fv2HP3Pv3Xez
      7oWH2Rn1Mr3Mx9tvLkNw+Mhx29m6fhUbd9RTUlzI7/77Jt6p7aaqqpJXX3yOojwvPTGdwnwf
      GDq33/A9LvzcNznvlLlYbTZa9mxjw/Y6ysrKaK6vxeL20dNSj2Z1s2fXVoLNDfTGdaLBnXz3
      R3dQXFFFdWUZwYZafnLvA3zy0k9TUeRn+Ruvgy0Hn0tm+84Ggm3N+AsKkUWBzuY9rNywg/Ly
      clKRXpYtewMFOwW5OfR0NPDWynWUVBTwz0dfxOMGw5aDz+PEMNJ8+1vX891bfsLsKWXY7Da2
      rl9FXXs/ZSWF7Ni+jYHeILtbepDSIb717e/hC5Qya+5sfLl5KKFOgt29bNi8k4rKChID3by5
      fCX5xWUo4U4aWoNs3LCRQFExv77jR6xrDFFZVYXf43zPB2zy3oxYBNJSA9xw68/wuURuvPUO
      fD4/bq+ffH8OrU1N2Bx2lt5wE6nhApVkLvvslaxbvpxf3nkrEcPOL+78CZFEivauHgYa1/Pr
      Pz2LL8dLfqAYt9NGtC9IKKlz509/jAqQidKluJk7uRi310df/Tp++adnUPsb+Nlv/8rz/3iU
      YDjJ288+yZ7OCD+/53ZCisF9d/03dm8OLo+XokA+AE6PF5fLSUlRAffcfjMZq4df3XErnf3d
      XP/1r/HwP19BMwyS/c3c8rMHkRKt3P+7J2hvaUG2Obnrlpvp6WngR7f/En+Og0g8TUdTA4JF
      4Lbb7wZA7anDUrKAgM+Fz+/n3Vf+xjMr62hc+zx/fmENf3rwV+wJhvjzL+4lafXgcrspKyki
      2r6Dx19ZzYqXn+Rfb25ix1tP8/q7tdx40y04nRI/vet+mjcv58FHnyfaupmHnl2Bz5dDfmHJ
      uH0X8VFmRANQ+lrxVs3nlNPPBqWPsvIKCorLmVJZwsvPPcW6jZsJdQ0w0ic0nc1N5JaWsm3X
      DtaveANVMGjcvZWnXlhGU7CHUH8f5aUlTJo6g4DfQ06gjCVnnoHfJWVHzrY4kDIREhkdwzBo
      qdvGvDMv4PyLL6G7YfcQeZ7CcpaccTr5Hhf5xaUU5Bcyc9pkBMBXUEx+fh4nzJhCV1zlvLNO
      Y3FNAc3dMSbNPYP7fvIjnBaJ/tZ6mptbeHvdLgQtzhsvP8Pa9RsY6BqgubGWmkVncvIpp1Ps
      d1BRM4NTTzsV2cjeATmnkGRvC4aRdS3fvmkzF136aT596SVs3bQNwebl3HOXMKk4H6evkIL8
      fObNnrH/wxJB5NQzlzBvxlTikT5qa2t5fdnbZAYLbQtPOo0TF85FSWuUlpQyZdoJFPjcR/3g
      TbIMMQCrzY4kCjiKT6BA2cOtt9zECYvPw5pXQbppNY89twxBAFUz8Pl8CAg4HPs/7xPjPdy2
      9Db+95+r+dq1l3LNFVeQSGUoKavC7bCiphVsTjdOu40Z8xfx9J8eYO32Zux2BwAO52CWLlj5
      6rWf4uYbfsTSO++hfMGF7Hz1r9x480+54LLLmFJRxK/vu4cVm3YiiSKOwevtDjtYPORKIR74
      4+PsrTnsDfdjp87l5ptvYVOfnXlVeeTm+vd94F08YzGLp5eAIDOpugpBEMhkNPx+H+WzTye5
      522WLv0xtW3hrBzA6XQMqpvLZ86ezo9uupm7fvV7LrnyWh659xZu/tkf+NzVn8BhtyMANocd
      UZSYUuzm9nsfRBdl7FYLVqsNSRSQLVacnnw+eeESVB1qJk1GlC1YZAlRkrFZZebOX8Dff/9z
      NtS2jnJymHiY3qAmExqzGdRkQmMagMmExjQAkwmNaQAmExrTAI4jWutrWbd+C4fO+ahlEvT0
      hmnYsWPY6yA7BE1vf3RsFfwIYrYCHTfoPP/8y1xyyUVsXLuCvlAMSZIQJdAlicamKLMrchlI
      hFDSAiWlftrae/C4XAiCDhaR1o4M11x5EcfhmFvHLeatOm4QkAyV7u5egn1h/A6Bju4QleVF
      qJKDkqIASjRCRhfxyAK7GxrIDRSTTiSoKA1gWFwUFQUQPyKD1o4XZg5wHKEqSdq6+ikJ+Oge
      iOF3O7BYraR1gWh/Ly63B4TsW8tileno6iPfn4PVakFFItzXQ2FJKZJpBIfNmBuApmlI0rGZ
      AtPE5P0wi0AmE5ojmiDD0FXq99SRESxYDIWkJpHvsdIzEKW4qJCOzm4ChUWATiKeZPKkqiFh
      bNrTSULJjJL64LDJzK8pHrXwTCYWR2QAgiDhy/EQV0FNy3hljUjaYNrkEtZtbuekU2bStKeB
      luZ65px8Drquo+tZb869/N9z62nrGb3muuI8N7/+9vtMXG1icgiSJCEIwpEZgKYm2FHbSHVN
      DWqyn6gukee2UrunlarKArZv3UFuXgE1J8yht6OVvGlTEA3joDrAaI/+KyAgy0c905PJBOeI
      Uo5kcXHmWadnf5QU7ttfPrguLS0bLb1MTMYFsxJsMqExDcBkQmMagMmExjQAkwnNiAYQ722l
      P6HT2toynvqYmIwrI7YC7dy6gYbodirKyigvH+ksE5MPNyMawMy5C2havol4/MM7Alk8lWHj
      nuCohlle4KWyyDeqYZocO0Y0AF3LkEgq+MdTm1GmL5zgnkdXjmqYVyw5YUQDaOkK09IVHlV5
      82qKcDusoxqmyX5GNADJ5iHXayej7v8+yTAMQn1dOHxFhLtbiaWhLOCjoydMZVkhzc2tlJSV
      o2kambRCTs77T5D9UWLF1hYeW7Z9VMP8xTcvNA1gDBnZACx2ysvL6ejuO2CvwUCwCdVRSDDY
      QUHpJFraghT47GzespvqKeW0NDeTSkbx5JXi9RoYhoGu7x/YdrSdrw0ODv+gY2Pg6X1ofA7W
      ZfR5L3kmR48gCO/tCyRIEp2tTRRWzzzgIpHcXD8Z4ITZ86nbvRvJZkeSJTTdyPrkGAaKouA9
      wOdnrL+5GSn8sZI7YrhjYnBjf/8mInt90kY0gGRvE57KuQx0NcDMKQAYeobuUBpJDaJKGVy+
      PApyHLT3hJk3p4bGxmZKKyop1kpJKykYtLKDneFGOSIII35wI4qj381xaHwOPTbaiOLI8kw+
      OMMagGEYpC15CKFaLI79s3cLooWpM2cPOb/Gk60U1kydun+nyxy22+T4Z/gcwNDZvnMXixYt
      5t1168dZJZPDoa69n1ffrR/VMM9dOImp5XmjGubxzrAGIIgiNZWlrFmzhpoT5o23TiaHQWd/
      jJfWjq4BnFBVYBpAFoGiisl484pANMufJh9dRqwlJrr38NLyNWzduWc89TExGVdGqATrrFm/
      BTUhEY7YhzvFxOQjwbA5gCCI+OwCsjuXtJIcb51MTMaNEfsBps4/HbGlG5d3YrkzmEwsRqwD
      COkwq9ZvYcPmrfv2GYZBf0+QlAqhvi46uvtQElEamtvQtAwN9fUo6QzxZJJwaHSdwkxMxoIR
      cwBHbhnVpU2UllUcsNcg1NWC5ixkoC+KiE40BIV+B5u37GZyTQUtzc0kExFy8svx5kwwX6Ax
      8FgYSd7YxI0J43e01xdo5FagvlZae2O0t7UecJFIrt8HGPsCEAQBURQwdCPremAYZDIZOA4G
      aB1/H5qxSZTjJGqsAj2uGSEHMOiLaVhSfRSUzd2/V8/QHcogqV3k5ThJaDJ5Hgvt3WHmzp1K
      U2MzZZWVaOrBvkAH+uSMhS/QSD4/Y+ULNFK4Y+ULNJw8YQzGQX+vuH1UGb4ZVNdp6ezn37/w
      RVatWg1MBvb6As3ad17u4HqKO+sLNKWmJrvDZjV9gUw+FIxYBwh3t/L0091IDrMVyOSjywi+
      QBIf//TV462Licm4M2JP8GsvPE1UAYcvwEXnnD7eepmYjAsj9gSfdebpxJMpNHX0xvI3MTne
      GLHKr6ZiFBSVoU2QdmGTicmIBtDb3UVhWTX5Oa7x1MfEZFwZ0QA0wUpvewOFpZXjqY+Jybgy
      ogEECvxogpU9tTvHUx8Tk3FlxI/iBasbIV2Hx18w7IU7t23G6s7FLmToC0UpLAzQ2d1LfiAA
      hk4ykWLK5OoxVd7E5IMyQk+wxosvvUxR2SSs1uFGJTNwuVz0hkIYHhfTppQe9iR5o+2fY2Cg
      HjB63YFomjaqsiDrLDaSPH0MfI80bXh5ujb6jRPvFbePGu85SZ4gCEyfPZ9J1ZMRhGFKScZ+
      tymbbFBb18bk6gDbt+4kvyDAtFnz6OtsI69m8jGdJG8sxtMRRXFEeeIY+AJJ0vDyRGn0fXbe
      K24fVUbsCZ55wqzhDg2eIFBZPYW91ePywY2i4pJRVs/EZGyZWK5/JiaHYBqAyYTGNACTCc3E
      qvGYHDUP/msd62tHd7adB6+/BGkMKvNHgmkAJodFOK7QHRrd6bKOhw8wR838dDVNfV0dKSVN
      PJFkYGBgtII2MRkzRs0AOttaKSgporW5md27thFNjn4nlInJaDO6BTCDfV+9T5ThNUw+3Ixa
      HaCorJzGphbKKyrQBmeIOR7KeCYfPgzDoGtgdOsbdouMzzN0nNtRMwBRtjJ5ypR9v11Oxz5f
      oAM5cXoJU0ref/JVAwPhMAYX8rntI/r8OKwSZ887PHfuw5VXVZQzorzKwpzDkne4sgCcNnlY
      eflex2HLAg5LXoHPOWLcZlblY5Pfv8BwJHEzdB1thNfkY69tHXb/0cqbVOLnklNq9v3eOwSM
      YIzx6FGaph2VT45hGEflNzSe8jRNy97EI7xuPOO29/EeqTxd1/cNfHak8o7353agvDE3gKNV
      8MMg72gT1weRZ8ZtdOVJS5cuXTqWgt4vUm0NdbR392CzO5ElEVVVSSsKumEQjcawWmQi4TCy
      1UYiFgHR8p6dJ4d/Ew3WrFxBfnEZyVgYQ5CIRqNoaQXVELHI7/822vuG3LpxLbacAjraWrBa
      JDRDBF0lEu6ltaWPRCqCrhnYHXYMLc07q96loryUWCREOqOS0XQMNY2S0RHQUVJJ4qkUWlpB
      RyASCWOx2ZBEkbamejo6e3C4vSSiEWSrFU3XUTNp6uvrwEjTF0rhcNqRRJHtm9YiOnOR9Oyg
      xalkCqtFJhyJIssSyaRCPB5HliCeVMgoSVRDwGqRD+NeGqxduYK8wmI2vbsKrB4kwSAWiyGL
      AvFUmkwqcVj3871k9Xe1U9/azkAkjtdpJaGoqEoSXZBIJaKohoCupoknFJLJBFZJJBSJYnfY
      Rywc7ZU35gbwfgz09pAxBAQ1joJMZ2srLV29pBMRDFWhrbObjCrQE2xl9556Isk0xYX5H1iu
      EummN5wgpVnoaNyFzeWjv6+bgZ4gDW1dVJQdvmdrMp0hGhpA11P09UQJhUN0B9vw5Djp7VUQ
      BQUtEUJ1FJLobCChZMCRQ2d7E12dvaTSKZrqamnp7CMZGcDpdtPVHSQUTuC0iezasZ24KlOQ
      68XQVQYGIuhKnLgG3e2tJFSDvt4u4vEEXo+dSFwhFk3hc8u0d/aSTGWI9PfS2dWFnknSFuym
      qb4eRUmS0K3EQ/0MDPThdHnoaKqjvrWLysOIvxLpoTccJ6XJqOkUFtLEMyKxcD/9/X043R7a
      mnbT2N59RPfzUFo7gsyYPp3+nm76+vtxuWysX7uOgXiKZLiX+tZuUvEw4VgcJZVANlS2bt6A
      Pb8Ct+29De+Y+wJl/c8NZIuN9pZGDFGipLQMr8tBKBLHYbMQDg3g8vjw5+ZSUlw4KnJ7Qwkq
      qiYhqFFyc3MJRyJYLBIZVcDpPLJZcWTZQp7HhmJYMXQFUbaQFygi15+PriawuzwECrIV/6gK
      1dVVJEO95OUHyM/Px+1ykePLpbK8DF9eATkeFzabA11NEQmFcObksjfT01QNSRLQBJFYeACH
      y8tATyeKmq0wpzWBwsIAdotMJNRPfnEFFgk8OT7y8vPJy83B5XJTWFKOz5dDSVEAq9WCVZaI
      xqKkVRGXw3aY9zBOeeUkBC2J35+Ly+OltKgAi8WCVRaJxWOoKjgPM7yRKPB52LZzJ8g2LBLE
      kxly8/MoKy4koxm4HDZyfLn4vB4sFgvReJz8/Dz0w/ggaszrAB+URCwMsgun3fTaMBl9jnsD
      MDEZS455EcjE5FhiGoDJhMY0AJMJjWkAJhOagwwgFhlg9+7dtAW7x8SRLZOKs3v3bhqb29D0
      I5Owef1qEunhPEx1urp6hu42DNa8+TJvr9t+dMoCif4ONtc27fu9c+Mqnnt95VGHF4+GiCaU
      wzo3GQtTX99IWtUBg/6eToLdfUB2+Pr2lia6+0IAaBmFxoZGlMzhu6DraprGxsbDfg6RgV4a
      m1oHzzfobG+hLxTNhqVlaGqoJxTNOrCF+rqob2giMwZjF402B7UtvvnUH1hWL1Iid+GbdRFf
      /vSSDxR4cMfbPLo6wne/eAkAHTve4aYHXua8BcV0pH38+PqvHHZYLz/7BIU1C66xnj0AABiR
      SURBVHFaD820ktx20x08+PtfHLQ33r2bPz67grtu/f6IYda/+wqvN8BXr7pg2OPhYC2vrAkx
      d1oVkOTeX/yBO++/57B1PpR3nvsLkcIlXHHOeww5AyjhDn728z9SUZbL9rYU3/zMidzzpxfJ
      FaKc/W/fIbrrDdpjArs2rOarN9zBP357B4HqadQ2h7jvjhsQBfjlT27kym/9mOIcy7Aydq99
      iW/c/Bvu+b+/sGjy8KP/7SVYt4nfP/kaBbY0EddUTi9N8+yGduIddXzztntY/uT/IrgDrHxr
      JXfdfSuPP/EvPHaRLU1h7vvJD4+H+RJH5JDGdYGzzv8EF0zN8P2fv8DT8Z2srW0nr2w6/3Zm
      KXc98jrRhM5/fuYU/vrcCuacdBZTPXGeemMjdm+AH/7HpXzzG7czuaYAV9UiXJ0refbtNiZX
      +PjUeacBMHfxGXzlS+fwtW8vZd0bz/D4S6uwufO48fqvcs8dP0HRYPF5l5MX2sKzm7tJ9LTw
      xetvy6pnaDzw33fQGUoy54xPcNXF+yfuyITa+NL1tzOjIg+5aD4VWi3bt2zk7bWbqF/zMn2x
      NIvOv5w5+Wl+88i/mDxrMen6Zby8LUxpoZ/onhVsbeqheOoC/u382dx25wN4bSqeE7LG8fYr
      /2LLtp08//oK2je/TSLcxXnXfIfX//kIhihw5qc+T2L7s2zpc1C/cxMnLlrI2g27+cOffsOh
      3UBvvfgPlq3eTEL08uNvXsbXvn0PU6u8+Kaezn9e+0msniJuue0mGrasYGPdW7z84vP8+3XX
      M9XWzl2/f4G7br0OPZNk6bY1xEOddBs+bv3aN1j6X9+gK6bhSrTwrxdfpTnu4Nvf+jIP/fp+
      0hqcdOGVfOqcxQC8tvxdfrL0u7z26hssqriQr3z5u1RPKsbwT+aqU0v5nydWEDVkfvezWyic
      NIebfziX1S/+jVfr0zz32jtc/9NfElz7NC8vW811112PEutn9RvLkTwBrrniMjavX03rh2Cq
      6ENepwaPPfQAt937Rz7/75fz58efpqqigteffZpYJkVnVOS3993OI/94kTvvvovPX/4xHnrk
      r1RWV1K37hX2dMcpnTybH/zgB7Q2buWiiy9myUVX7kv8AMuef5xblt7JJVd8lj8//FdKKqto
      3rqSF59/Cu+M87njp0t545knURJxzv3U1dzyX5/n5ReWARDvaeTFFVuorKrgH39/9GDNdY1A
      9UxuuOF7BPfs5ryLLuK08y5hyfQcXl1fR2VVBU889jf+8viTfP/Wn/AfX7iSiy+6mAs/dTWX
      LJnJo39/gYrKSl595gme//tf+Mx1N/MfX7ySvZMxnnHBhSycfxpfvPLjdDTUcsW3foo/up3J
      p1/BnXffyXN/f4hELMKl136D+cVWLvrct5nsdTCcV7sgigiiyOp33kbRVMprFvCDG75HW+2W
      7HFB4Lm/Pcj//H05P77lejKqikWWkSxW9EyaSHcz3/7Wdzjzym8wqzwHUcx290siaLqOt7Ca
      c05dzHd/9EOSjavxz76QO+64jdeffiJ7r9Qky1dtYOu2nbyz7BU0w8BbUMWNt/2E8J6NRJIp
      +lUHD9xxY1YfdH537495fXeCH3z9KjRNRxYFLBYrmXSa1tr1fPP6m7nuxqXkOSwEWxvYtnMP
      FottTOZOHk2G5ACf/cI3+dQZNRiGTnlpMYVlVVz7uauRgQUnnYzdIjEp4OWlN1dRXZhLdWUZ
      ntwiPnP1tfgd0uD8wNlUY3d7CTavpaOrl5JB/51zLrmKm6+7DIDmt8tx+QNcdsXVTJ9exZt/
      foF3KzScBWWAQWPdboKda6iecTGtqzZic/sp8HuonDyNz5bVMDzCQf7hjpwC8jwOqqdMp7By
      Bsnmdbz02pvMm1xGnsdLS8M6gj2nUFZWQElFNddcfRVFYi+r3l5OzN2FYZQNkeAJVDB3Shn9
      Qg0PP7SMNb5efMVTgaZhNTIMnT27trNi7TYu++ZV/P6O+/nSf1zH1h0Nw9a1Qu3beOi5jdx5
      2/WE+3s59eSTeerJJ5ksB1lw1kX8/M7bOPszX6cy34Fm8WEMtLJm7SpaEnYKvdkij9tlZcuW
      bcwprqT+medZW6LgCpQD0FG7jplLPs2nLr2I3uZGGrtjhPu72fjuCiI4sImwePEp2CxZw9qx
      4lnWdcp876tn0tc3wElzpvD3Z16he8NrnP+lG/nxzV/jiz/4KU4UOpp2E4zC2eeczX2/eRjd
      +AJjMKPrqHGQM5wrx09xcQlelw1BEDj9jFOpr91F+dSZTKqsorCwiAK/l4Unn0bb7i1YvAEu
      vfRSuprr8AYqmTFlEoWFRRQVBwgUFDJp2lxyrSlSOCgJ5GGxuSgqLiaQ5wVgwcmn0tfeiCOv
      lAULFzOj3EddMMYXrr2Ktu3vUtenMGvh6VyyZBH5+QWUVEzmjMWz2bO7iVlzF5Dv9wIihYWF
      lFVUEAgEKA4EKCgMUFZeQVFRMaVllZw0bzq765qZs2AhZyw5h2hHPWnZxez5i3AaETJyDpdf
      ehF7anczafocTjrjbLSBVnJKaphzwjQKcnMAicLCQkrLiskPBCguKcGVV8KkAhtNvSpf+twV
      5OYHKCoqpqSkmJKSMkpKCigpKUbCYPO61cw58xMsmF7OrBmTaegIcf45Z1JRWUVhYYDiwgIK
      AgGKCgOomQwWWaSzM0gkqXHGORfgNSLYi2bw8bMXYXfY6e/pIhgMUlhRw0Xnnsbmrbv4/Be/
      TI4zW+CaNW8+u7ZtY/rC05hd6aOhM8kXrr0SqyyRSCSZu+gkyooKqJlchSDLvPnqm+SXlPCF
      L32RXL+fwqIi8nzZyVE0AwQ9TTAYRBPtXHDJJ4gF65h28oWceEIFDpuVrq4ugsEups9dQH9b
      Hc3BAb7y1a/gcX4wP6Cx5rh1hdi5+nX04jnMrHzvCprJKKAmeOLpN7ji8kuOtSbjznFrACYm
      44HZEWYyoRkVAzCHQDH5sDIqBmCWokw+rJhFIJMJjWkAJhMa0wBMJjRH9KFtKjpAXWuQvPxC
      Yv2dWN15VJYVjZVuJiZjzhEZgKokUdIqkXAPdmchmhIZdipUE5MPC0dkAIlECq8vh0wiQSTZ
      iWS1IYoixiFToZqYfFg4op5gwzBIxOPYnS7UdApRtmKRpaMe19HE5FgzxADqdm6moyeMIIgs
      Ovl0HMN/T3EQpgGYfFgZ0gpUUl5NMpXEqSeImZO8mHzEGWIATpcHuxanW/PgP749WU1MPjBD
      DMAwdEK9bViNDL3JY6GSicn4MbQjTBCpmX0SVoeDvCMbI9bE5EPHEAPoaq1j1YathLpaiGWO
      hUomJuPHkH6AgpIqTjxRoTDHhcV0lDD5iDMkiYuSRHd7I+9u2sE4zlhjYnJMGPYdn4n2UFI1
      BfXQ71wMg4G+HpJKhkion6RilpFMPtwMX8gxdDZt2Y50SA4Q6+ugvrWLVDJGe7CPpsbGcVDR
      xGTsGFIHWLNiOZqriBNPmDSkDhALRygoKaGjvQm3pxQ1EzWd4Uw+1AwxgHkLFrN9+/ZhZ+0L
      VFZTu7uegqJqYv2d2Dx5pjOcyYeaIQZgszvo7uogv1AaMqydKNuZccJMAAJ5vnFR0MRkLBmm
      I0xAwqC7u5sPwejWJiYfiCE5wPaNa9EkB6LZBmoyARiVkeFMd2iTDytDcoBQb5B31qzHZxWZ
      fsbF5Jv+QCYfYYbUASxWO6HudtrDCk7zpW7yEWdIDuB0eymtqKaiegqy6Qtk8hFnWHdoj8NK
      Z1cPRziPnYnJh46hBmDoNNduQBItRExXH5OPOMPmAIHSahpbg/iGqQC3Newk2Btl985tNLUG
      x0FFE5OxY5hxgQxSuoUCp0EyA1br/iMD3R20BoNYYzp5vgCaEh0/TU1MxoBhB8ZyeXKYNWch
      XuvB+725Bcw6QaAvYSHR347FnTseOpqYjBlDOsIMQ+e1555CER2cff7FuKwjXbofsyPM5EOF
      YWS9l3V9+BxATYUomz4LdbwVMzEZAUPT0KNRtHAEbaAfra8fPR7HyGSGWVQMNQMZFcPQQddB
      N8DQMQbXICBI4vAGIIoCm7ZsZ8qMaeMcTZOJgqFpaH19ZDqCaAMDGKkUeiqVXSeT2cSdTGJo
      OoamgaEjeTyIOTlIfj9yXh6WXD+CxbJvYe+2bEGwyNl9ggCimHXvF8XsIgzOJC0IwxuA1V1A
      nt1qfhRvMmoYmkZq82aSGzai9vRgqBpybi5ySRFSbh5SXi6y3Y5otyPYHYguF6LTAZKEIEn7
      E/EoM9QADIO+gQFETeX1lRu5+PT5oy7UZOKgp9MkVq4i/tZb2KZMwX3euchFRQhWK4J47N+w
      w1SCDZRUCgMQBBG7/f3HRzQrwSYHYug6mdZWkus3kNqyFceihbiXnIXgco3JW9wwDFRVJRaN
      kkwkSCYTJBMJEonsWkmlUBSFtKKQTiuk02kMw8DQjaEGMNDTwVur1pJjlZi15BOH5Q1qGoCJ
      nkyS2rGD1MZNZNo7kEuKccydi33eXETrYTQlvg+GYRCNROjv66O3u5uenm4G+vpQlNS+9Od2
      e3A4nTgcDhxOF06XE4fDic1ux2azYbXZsNlsWCwWhMEi1TCfRLqoKK/A7vSYQyOaHBapXbWE
      H30U+9y5uM89F0t5WbbcfgRvezWTIRaLEYtFiYTDhAdChEMDhAYGSCYSqJqK2+0hNy+P/ECA
      mbNn48/Nw263I8kSgnB0dYQhBuBwuQn3NLK9NUJuRQ2FjiMO02SCYOg60RdeRNm1i/zvfAfJ
      78MwDOKxGH29PfR0d5NMJEin04PFjzTpdJpMWiGTyWDo2fZ4TdMQJRG324PL7cabk4PP76e0
      vByf34/D6USSJMQxqDMMrQQLIql4hnmnLcF/SA6gppM0NLWQFyghMdCN1ZNHYb75cfxERItG
      GfjjQ1jKysj91jdZtXIF9Xt2k0lncDqd5BYUUBAIkF8QwGqzYrXasFqt+7ZliwVREBAEAVEU
      9xVJxpthWoF00vEeOlqbya+opsi5/5AgWSgtKqC9qx2L1YcS6qUg14uum1/PTyQyu/cQeuxx
      PJd+En3yZB77658pLi3j8mv+DevgvHFHgkE2NzkWDJsDVNTMoaVfHVIHUJNR2nrjTK4qp6ml
      D03T91nwWGRPJscXWihE+IknMRSF/G/9J8FYjBcefojzLryISTU1x1q998UwNNLJARLRNgY6
      NzLQuWH4HKCzN0RZSQWazkGdYToCZBIMRL3kuCSs7vJ92daxyL5MxgdDVYm99jqJtWvxXvop
      7LNmsW7NarZv2cJVn/t3fH7/sVbxIAzDQEn00BfcRF9wA4loB2omhaamkW05WJ2FeAPzKJ1/
      49Bm0K3rV1LX0oXVamOJ6Qw3YdEVhUxLK8qePSTfXYdSXUVk5gzaOjpobWmmtKyc8y++BIvl
      MGZRPEIMw0DVdOKpDPFkmkhCIRxXGIimGIgmGYimCMWSZFQdwwCDbGU6Eekgo0SQrR5srgAC
      GgaQ0XRUQDVA1TRUQ0cABFEYpiNM13j6ib+hKBrWwmo+feFZ76uwaQAfXnRNIx6PkwmHkdo7
      0OvrSeypI9jeTqeu0e9ykC4rxVNcQklZGeWVlRSVlGKz2d4z148mFJq7wgxEkkQSaaIJhWhC
      IaGopDMaGVUjo2XHlDXIJnqM7Fo3QJYEnHYrLruFHJcNr8uO32PH73Hg99jxue3o6MTTCmkl
      QmjnQ2xs2YNWfCEJuZC+pIKiqhiA02LFKktYJXnfWhIFRGE4ZzhBwJvjJ6lolJQVjd2dNxk3
      DMMgFo3S19tLT3cXPV1dJINBjI4O3L19FBkCheVlyJMnk6msIL1gHqXeHKZ5PNgdDiRJQhhs
      sRmOWDJNe2+UhvZ+drf10xOKY7fKFOe70SWNhKoQVZPEMikUI4NgAcEGkihA9m+/g1p2k4wg
      EAJCQHvawEgDA/vjA2CVZaT+9SwUt+KvuYqCBZeR53JT6PEScLuxyTLS+7QuDckBdu7cQVvD
      LqJpgQsuuQy3WQQ6LjAMA13XUVU1Oxr34Kjcuq6jqepgG7uCklJIJpOEQwP0dHUR7u8n09WF
      IxrFFU/gVQ38Dhe2vALE8gqkmhrE8go0SUbVdFRNR9ONfWtN19F1I7sY2bWq6/SFk7R2h4kl
      09itMqX5HiaV+KkpyyOiJXh99y6aB/oozfFR5MmhJCe7+B1OrLKMPJgwBQH2Jn3hgH+HJlnh
      kP2JSCt71v0Giy2HqYv/E4vNe1T3dUgOoKciRBUDp9M1RAmTD0bWZyVDPBYnEY9n/VXiceKJ
      /b/3Lqqqohv64Mcb2WtFSUSWZURRRDcgHE8TjqeJZyCZ1klkDJBtZAwZzRDx2x3YZR+SqxD8
      NiSrBZtVxmq3YrXIWGQJS0hCjnYgSyKyJA2uBSRRRBIFJEkcLC4ICKKAKArYZZnZkwJcckoN
      bocVSRSIKgqrmxr59eplFLjdXDj9BKYFCpFGrXXQQEn00tn4Ot3NbyBbvVTOvBp/0fwP1AAz
      rDPcpk3rmTdvISAcVm+2mQMcjGEYpJJJWluaaW5ooKO9DVVVMXQDSZZwudw4XS4cTidOlwun
      3Y7DasNhs+Gw23HY7WQMgXAG+pMqPeEEvaEkPaE4/aEY6b5+9HCYHCODN50gR1fwZJL4iwvI
      qyojr7ocb2UZlkABoiQNdjhldTuSxGIYBolMmkgqRTSlEFGSRJIpwqkkffE43bEocUVBMwzs
      soX5ZWUsqZmK12Y/Qjk6mVQYJdmHkuxFifeQSUfRMgk0NUFGiZGItiIKMoXV5xKoPBuLzTsq
      LY9DDGDjmuXUt/YgSjIXXHKpWQQ6TKKRCC1NjTTW19MZ7MBisVCc46NY1ShQ0kipFEYiAYoC
      uoGiavREFXqSGj2ijV7JSb/sIOP2IvhzsTvt+K0CfotBrp4m11DI0xW8oo7FYUd2OhCdTkSn
      EykvD0tZGYLN+p6JwjAMFFUlpWZIZrJLJJViIJFgIJkglEgwkEgQSiXRdB3NMHBYLOTY7bht
      dnLsdrx2Bzl2O7kuFwG3B7fNli1n897GZegayVgH8XALiUjr4NKGloljGAYWmxebMw+bIx+b
      K4DF6kGyOJEtTmSrG5sjD4vdP+rN7ebguEdBKpmkt7eH7mAnLc1N9HR1YrPZ8Tu9+J1erLEU
      Aw0t9HcPEHO4SeQXEbM4SFnsYLWiI2CxyhT4XRT63RTnuSnKdVPgc+GwZStuBtmytqrraLqW
      3dZ0MrpGWtVIayqKml0S6TQxRSGmpIgqyuC2QkrN7GtVyba1gFWScVgs2C3ZtdfuwOdw4ndm
      17lOJzl2B7IkIQnCQZXTw0XXNeID9Qx0bybaW0s80oqhqzg8xTi9lbhyynF6y3F6y5AsLgRB
      Omb9SBPaAAzDIJ1RicaTJBWVtKqT0SChpInFU8STCoqqo6RVwtE4A6EInd29hMJRMhoIBrht
      diSbjbgso6Mi2S0YMsgWAatNxGIRsNhE7DYJWRbI6Hr2O1VByJbvyboC7N3eq5coisgHLKqe
      IZmJk9FSSCJIgoAsZVtSbJKIy2rFabXgGlwcVgtWSWKwlZzBNkZ0DAwjq4NuGPva0PetDYP9
      5kJ22+CAfdnmyrSWJpGJk0gnSGYSpNIJND2NrmVQEj3oWhoEAYvVi9XuR5Asw1RtBxH23oT9
      2++fKI1hto6cozIAXUuzdfNWLC4fJ0ybPOYGYBgGajqNpijo6TR6JoOmqmQMg4whoAKKpmcT
      a0YjndFJpVWUjEYirRFNpAnHksSSaWIplWgyRSSVJKVlUAUNQdAQBR1B1EDUEVARRB2rLGDR
      05BJYogGCBqGYICoo0kGiiyQliUscrZCKQ8mxGxitOKyWnBarTgsFmyD7c8WSUIWRcAYTID6
      4FtaQ1EVkpk4yXSCRCZBKh1DSQ6gpPoRdRWXbMMuyUiCgIiAJIhI4mAZ3wABI7sYBrqmYKgp
      DD2DoaUxtDToKhjaoPuKBVGUENn/ls8uBybSbNIQDv0vgN3ixmX34nL48TjycDnz8OZNxV84
      D4vVs88V+uAkL+wPd59RGQiGjqFroGtgHLw2DA20wd/GXkPWh24b+gG/Bxd977aWDX9f2Pq+
      647KANR0mI4uFTUdpqq6Ck3L3tS9b5C984a93/ZrK9bw4uq6oQKyBcrswxCyX6YdfEOzj0oU
      DCQ0ZEFHFjSsgopDSOMQM9iFNE4hg1tK4RFTuMUkLjGJS0hiFdWDn4dw6IM6NuxNhGAckCCN
      D6Rb9t6Jg/dS2J/Ahf3SjjZcQTjSFp4DX/OD62yXLAgyiBKCKIEggTi4CBKCKA9+zC4OXiMc
      sC3u/y0I++JrkPUwNQQREBFECUOQsvdClLJ3VRimJ/iwoqFr7NqxHas7l8lVZUedA2TbtrUR
      ju5/OCMVD4fffbSp+XgwgY8+wsH/jjn/HxgxItNKLdx1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='94' name='Sheet 1' width='192'>
      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
      +T8+H4fyLEl+7gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      1XX6etP8P+G6YFkM1VmyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
