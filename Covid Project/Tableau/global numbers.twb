<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.1pj717b1jh62od11s7o3o0jpnvea' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.0b2uhj61r2m0sv1ah3nyc0k7vlo4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Covid project/Tableau/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0b2uhj61r2m0sv1ah3nyc0k7vlo4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='Highest_percentage_Infected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_percentage_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest_percentage_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_percentage_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.459375' measure-ordering='alphabetic' measure-percentage='0.540625' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Sheet1 (tableau table 1)' inline='true' name='federated.1voozjf13oa2rx1ajf4630hlmqaj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.0ogi2bl0hooab619qhep80n9ayqi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Covid project/Tableau/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ogi2bl0hooab619qhep80n9ayqi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_new_cases' ordinal='0' />
            <column datatype='integer' name='Total_new_deaths' ordinal='1' />
            <column datatype='real' name='Percent_of_New_deaths' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_new_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_new_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_of_New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_of_New_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_of_New_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.420312' measure-ordering='alphabetic' measure-percentage='0.579687' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.1mfcn5401snw9510z2pyd0ysadb2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.03zpw8a06k5e4a10b2kxk0bfplkq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Covid project/Tableau/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.03zpw8a06k5e4a10b2kxk0bfplkq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.479688' measure-ordering='alphabetic' measure-percentage='0.520312' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.11higck06t4i3413ufjud0v6lx9c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.0862u9o04174tj1h47ga00xn23ed'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Umesh/Desktop/Dinesh Scan/Dinesh DA/Capstone/Own case study/Covid project/Tableau/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0862u9o04174tj1h47ga00xn23ed' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D244:no:A1:D244:0' header='yes' outcome='6'>
            <column datatype='string' name='# Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='Highest_percentage_Infected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name># Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[# Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias># Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_percentage_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest_percentage_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_percentage_Infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D244:no:A1:D244:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[# Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.36875' measure-ordering='alphabetic' measure-percentage='0.63125' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 1)' name='federated.1voozjf13oa2rx1ajf4630hlmqaj' />
          </datasources>
          <datasource-dependencies datasource='federated.1voozjf13oa2rx1ajf4630hlmqaj'>
            <column datatype='real' name='[Percent_of_New_deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_new_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Percent_of_New_deaths]' derivation='Sum' name='[sum:Percent_of_New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_new_cases]' derivation='Sum' name='[sum:Total_new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_new_deaths]' derivation='Sum' name='[sum:Total_new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Percent_of_New_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Total_new_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Percent_of_New_deaths:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]' value='214' />
            <format attr='height' value='46' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[sum:Percent_of_New_deaths:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]' value='44' />
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='background-color' scope='cols' value='#00aaff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1voozjf13oa2rx1ajf4630hlmqaj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{51151E74-373F-49A3-9D00-E597422C6744}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Total Death Count by Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.1mfcn5401snw9510z2pyd0ysadb2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mfcn5401snw9510z2pyd0ysadb2'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1mfcn5401snw9510z2pyd0ysadb2].[sum:TotalDeathCount:qk]' scope='rows' value='Total Death Count' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mfcn5401snw9510z2pyd0ysadb2].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{772E1512-75B6-4BB3-B7E1-4944F134DE16}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Percent People Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.11higck06t4i3413ufjud0v6lx9c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11higck06t4i3413ufjud0v6lx9c'>
            <column datatype='string' name='[# Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Highest_percentage_Infected]' role='measure' type='quantitative' />
            <column-instance column='[# Location]' derivation='None' name='[none:# Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Highest_percentage_Infected]' derivation='Sum' name='[sum:Highest_percentage_Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11higck06t4i3413ufjud0v6lx9c].[Longitude (generated)]' field-type='quantitative' max='56151632.291506171' min='38927700.265882164' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11higck06t4i3413ufjud0v6lx9c].[Latitude (generated)]' field-type='quantitative' max='7108227.0467882417' min='-3202697.7795447288' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' value='Highest percentage Infected'>
              <formatted-text>
                <run>Highest percentage Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11higck06t4i3413ufjud0v6lx9c].[none:# Location:nk]' />
              <color column='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' />
              <geometry column='[federated.11higck06t4i3413ufjud0v6lx9c].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11higck06t4i3413ufjud0v6lx9c].[Latitude (generated)]</rows>
        <cols>[federated.11higck06t4i3413ufjud0v6lx9c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{808A937C-DC92-4724-8B99-B6E1F2EFBBD8}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Percent People Infected from Jan 2020 to Apr 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.1pj717b1jh62od11s7o3o0jpnvea' />
          </datasources>
          <datasource-dependencies datasource='federated.1pj717b1jh62od11s7o3o0jpnvea'>
            <column datatype='real' name='[Highest_percentage_Infected]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[Highest_percentage_Infected]' derivation='Avg' name='[avg:Highest_percentage_Infected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Highest_percentage_Infected]' derivation='Avg' forecast-column-base='[avg:Highest_percentage_Infected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Highest_percentage_Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pj717b1jh62od11s7o3o0jpnvea].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]' />
              <text column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]' />
              <text column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[fVal:avg:Highest_percentage_Infected:qk]' />
              <color column='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pj717b1jh62od11s7o3o0jpnvea].[fVal:avg:Highest_percentage_Infected:qk]</rows>
        <cols>[federated.1pj717b1jh62od11s7o3o0jpnvea].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E432D00B-2A70-4325-9D07-AECD660990C4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='horz' type='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='7' type='layout-basic' w='90464' x='483' y='940'>
              <zone h='39016' id='5' name='Sheet 2' w='45873' x='483' y='19867'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57943' id='6' name='Sheet 3' w='44591' x='46356' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40177' id='11' name='Sheet 4' w='76864' x='483' y='58883'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18927' id='3' name='Sheet 1' w='45873' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40177' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]&#10;[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' type='color' w='13600' x='77347' y='58883'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='142' h='98120' id='8' is-fixed='true' param='vert' type='layout-flow' w='8570' x='90947' y='940'>
              <zone h='8578' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' type='color' w='8570' x='90947' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='25' param='vert' type='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='143' h='18927' id='3' is-fixed='true' name='Sheet 1' w='45873' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57943' id='6' is-fixed='true' name='Sheet 3' w='44591' x='46356' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' type='color' w='8570' x='90947' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39016' id='5' is-fixed='true' name='Sheet 2' w='45873' x='483' y='19867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40177' id='11' is-fixed='true' name='Sheet 4' w='76864' x='483' y='58883'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40177' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]&#10;[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' type='color' w='13600' x='77347' y='58883'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1D7D6C00-48A2-42CE-9AD6-7E5E078B264E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1voozjf13oa2rx1ajf4630hlmqaj].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E7EC939-F544-4A1B-B20E-0884C536899B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mfcn5401snw9510z2pyd0ysadb2].[none:Continent:nk]</field>
            <field>[federated.1mfcn5401snw9510z2pyd0ysadb2].[sum:TotalDeathCount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F52A4F67-25AE-4626-847A-2D6A05F5F729}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11higck06t4i3413ufjud0v6lx9c].[attr:# Location:nk]</field>
            <field>[federated.11higck06t4i3413ufjud0v6lx9c].[sum:Highest_percentage_Infected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{28833B0F-1946-4B09-8101-7ACF575176D9}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]&#10;[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]</field>
            <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]</field>
            <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44B44A7F-9B76-4A23-9C2E-FE7499BADEE8}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Forecast Indicator:nk]</field>
              <field>[federated.1pj717b1jh62od11s7o3o0jpnvea].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1AFDE5DD-7E21-46D9-9EFA-A7E02AB8C6D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='94' name='Sheet 1' width='192'>
      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
      +T8+H4fyLEl+7gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3d6ZOcx2Hf8e9zzH3tzM7eF3YXWOLkAd4UD8mUeUiQJcp2bDllW5HLih2X
      bUVyVVJJVSr/QOwkshNb8gvHlYotW6TKpGSRMg+JFCleAAEQN/bAXrPHzOzcx3N2XuxiieUC
      1C6wB5bTn+JwBrNz9Mz073m6+3n6eRQhhECSGpS63QWQpO20YQFwHGejXkqStoxcA0gNTQZA
      amgyAFJDkwGQGpoMgNTQZACkhiYDIDU0GQCpockASA1NBkBqaDIAUkOTAZAamr6eB8+MDzNf
      qBCKJilnU+ANc9uhfSibVTpJ2mTrCoCqKliWhaBKNN6HZhcwhUB3XRzHQU4tkHaadQWgVjcJ
      BoPYhkq5NI7wBOlVFBRNA0BbupaknUJZz4wwIQSu66Kq6uLSXlFQlcUGkOM4MgDSjrOuNYCi
      KMuVXFFky1/a+eQokNTQZACkhiYDIDU0GQCpockASA1NBkBqaDIAUkOTAZAamgyA1NBkAKSG
      JgMgNTQZAKmhyQBIDW1de4Pm0rNMTU9BIIFbySI8ckaYtLOtKwDxlnZKxSLxzjjpmbCcESbt
      eOsKgGvXqLleenxhhhdOgCdAj6Kgyhlh0g617hlhAlAVBcexQVHR1MVuhJwRJu1E654Rdrm9
      r2nreqok3ZTkKJDU0GQApIYmAyA1NBkAqaHJAEgNTQZAamgyAFJDkwGQGpoMgNTQZACkhiYD
      IDU0GQCpoa0vAEKQnZ+jbtqUiznKVWOTiiVJW2NdAZibGiVdKGOaVcbGZ7g0Moy7WSWTpC2w
      rn2a87ki/ngzk5NjhELtaHYRS84Ik3awdQWgs7uT0ck54i0dlLPTCG8UrzxHmLSDrWtG2EeR
      M8KknWjFGsCxLUzLBkDTPXg9ctaX9PG2ooanU5d49oWX6enuRg0kePyT929XuSRpS6wYBWrv
      3cP9dxxAAOFwZJuKJElbZ9UwqMfjIxBN0BL1b0d5JGlLrQpAtVZl+NRRJtOF7SiPJG2pVaNA
      s7Mp4vFmcrkc7e3ta34hOQok7UQrOsFmOcszTz9Nd08f3YP7WUf9l6QdaUUTyBtu5sEHH+LI
      kc/gw9quMknSllnVB/ApJj/84QtYquwESx9/qwJgWja+cBSPqG9HeSRpS60KgBCC8Qvvky3J
      JpD08bdiFOjcqffIlg327RkiEAoR8PvW/EJyFEjaiVasAfr7+ynlFhgdG2U2k9uuMknSllkR
      AF+oiaagysTkJAv50qoHO5bB7MwMlZpBpVSgUpMzwqSdbXUn2DC51g7S86kJClUTBZvRsUlG
      h+WMMGlnW7EhLDMzjhKI0xqASCiw6sHxlnbM+TnGxscIhVvkjDBpx1sRgGi8lQMHFvcCdetF
      CgbErugH16sVSuUq0UQHpcwUwhuhV84Ik3awa84Iyw6/RTF5L/1Na3shOQok7USrpnwJIXBd
      F0XVUeUJgKWPuVUBOPnu66SrgvbmBAcHtqNIkrR1Vo0C6brOxMXT5GuyQyt9/K0+MJYQRJua
      SY1fIF2obUORJGnrrApArljh4UceoiXZxNjFC9tRJknaMqtGgeqlBV5/6xj7D91GOBIjEvSu
      6YXkKJC0E61aAxw9+g6TU2OcPj+65sovSTvVqlGg9p5BFEVBDYe2ozyStKVWrAGsWpGf/ex1
      FE+ISrm8XWWSpC2zYg2gefzcdvAgqjfI3u6e7SqTJG2ZFQFQdS/FfAahh/AGo8Sj4e0qlyRt
      iVWdYK+mMjs3R7Fc3Y7ySNKWGR4dXt0J9gWCNCX9+BU5J1j6eJuenl69BlAUlfGLp1ioOFd9
      klGrYtku1XKRat3c9EJK0qZxndUB0PwRfuu3v0IivPrcAMK1OHnsbWYyOYZHxhm+cFHOCJN2
      rLtuO7i6CaTaVX70oxfpGti/6gnDp09SdyGdSRGPtKHZBTkjTNqxfOHEVc4RJmBw70E6WpOr
      /rT74GG6KwXqwrd4jrBwTJ4jTNrRVq8BFJfj7x2jvv8Qt+/fveJviqIQCDcRAOKR3R9+qiTt
      OKv6AJlijbb2BPVidjvKI0lbalUA+nu7Sc/Mkujo247ySNKWWhWAifFRfP4A6XRmO8ojSVtq
      VQDqtTqWbXPyndcYmUpvR5kkactc87AohanTVGIH6FzjySLlhBhpJ1o9J3iJXS9jXH1jsCTt
      eEIIXMNYPQxqmiZerwctmCAiJ4RJO5AQAmEYuMUiViqFNTWNNT2NWyojTBNhGgjTAk1b2QSy
      qnn+73e+y0D/II4W5BceunfNbyqbQNJ2Eo6DlUpRO3oM49RpXKOOFo2hd3bg6e7C09WNFo2i
      +Lwo3qWLpn1oQowvzIH9B/AoDv6knBAj3byEaWLNzWPPzlA/fQbz4jBaczOBO+8g8e9+Dz0e
      B+XnH9pw5YQYTcesFZmvqyTdKRjo3LQPIElrIYTALRQwR0epnzmLNTWFW62B66K3taK3thK4
      4w6avvTri0v1NVT6K60aBSouzJIpOTRFwyTisTW/kGwCSRvJmpuj/NLLmCMjAHgHBvDv34+n
      rxc1GETx+dZd2a9mVQDeeO1lLEXHr/u597571vxCMgDSRjHHx1n41reJPPkk/oMHUGOxDans
      V7NqGLSjuYkTR48igvFNeUNJ+ijG+Qtk//JbNP/+7xN68BNoTU2bVvnhKnuDTs+nufue+2hp
      Wn1coHI+w/j0LPFkJ+WFFPii7BnoRR5FXbphQlA7foLCM8/Q8vWvobe0bMnbrgjA9OgZxqcy
      BEJVvJHV8wGC4SiKmMYwCmjeZlS7jCUEmpwQI92g+ltvU37xReJ/9IcQj2Pb9pa874oAdA3s
      Z9/cHOMzC5w9/hbJZCt97R90hA3TZmBgF+eGx/F5XHBNNEVZbvvLPoC0XkIIKi+/QvWtt2n5
      xtfRwlt7KJ5VTSDDtOnp66VQLJOZmVoRAEXYjE/NMXTLPmr5eYSvDVnlpeslXJfis89hjo6R
      /Pq/R13Hidk3yopRIKNepVqtMjMzT1tXF9FwGI++tiouR4Gk9RC2Tf7vv4NbrZL4N19G8Xi2
      pRwr1gBzE8OcGZ0mm11gwFS4/45921Io6eNN2DYL3/5r1FiMxO98ZXlO+Za8txDUajUujY5w
      aeRDB8YKReP4GEEPJ2hJrH0jmCStlTBNMt/8c3xDQ0SOfHZThzgvs22b0YsXuXj+HNOTE4BC
      X38/u4f2rgyAbdYplSvUTJuaYWx6waTGIoQg/92n8e7atemV33Vd5mZmOHHsKKPDw3T39LD3
      4EE+9djjBAKB5fde0QcwjRqVah0Arz9AKOBf8xvKPoD081SPHqXyyo9Jfu2PUfTVR+S5UUII
      yqUSp0+e4NSJ4/gDAW47fBd79u7F7796Xb7qjDDXtpieS9PTtfad4WQApI9iZzJk/uy/0/In
      30CLb+xeBpZpcv7sWY4ffYdKpcL+g7dy6Pbbia1hK/KqGJaLeSrVGtWagQC5lVe6YcKyWfir
      b9H0G1/asMrv2DYjFy/y/onjzKZSDO7Zw6ef/Axt7R3ralqtCsDxo2+CJ8jYyDDlusudBwc3
      pMBSYxJCUHj6aXz79uHbv/pwm+t5HaNeZ3pqkjPvn2RqYpLu3l4O330P3b29eK5zGHVVAFqa
      mxmemmPvocM0hYPXXWBJAqgfP4E5Pk7Ln3zj5y6ZL7fGhXBxHZfcwgJTkxNMTUwwm5rGcRw6
      OrvYd+gQj33mCL5rtOvXY1UAFEVB07zEm9sY7Ou44TeQGpdTLFL4x++S/JOvX3Ws3zAMZlMp
      Ji6NkZ6fp1QsUK/VEcJFCIg1xejq6WX/oUM8+vgTBEMbf+LGqwQAbNOgUpNniZduTOWVHxN6
      +CH0RGL5Psuy+MlLLzIxNoZpGrS2d9C7axd333c/0ViMQCCAqmlomrYl2whWBMB1HUKROJoy
      je3II/9L10+Y5uIObv/pP35wnxC89PwPEULwK7/xrwlHIqjqNY/MsyVWvPvZd17h7/7pRQwt
      wJ0H5NGfpetXfest/IcOrti788z775NJz/PYZ48QjcW2vfLDhwKw/55H+b0v/yox3eX42dHt
      KpO0wwnHofTiS4Qf+8Xl+7LpND956V/4wq/+2k21vWhFE0hRFELRBJ/6xSeu+uBKIculqRni
      LZ1UFlLgjbJbzgiTPsQ4cxZPezvaUtvfMk2e+Ye/57Off4pwZI3H2twi69oeHYjE6Wipkavm
      UD1yRph0FUJQfP4Fwl/4/HKdeP77zzG0dx9dvb1bNtNrrdYVgEJmhqLlpb+nmfMXUyiOJWeE
      SSuY4+PgOgR3D4KicOLYUUqlIkee+uKWjOqs17oCoKga1UKGTMBHS5MP4WuVM8KkFUov/IjI
      44+BopCZn+eNV1/lt3/3qzdl5Yd1BqAp2U5Tsn3pX3K+gLSSnV3ATqXwHzyI4zg8972neeJz
      n9uUDVgbZfvHoaSPjfLLLxN65BEUXefNn75GR2cXuwZu7n3JZACkDeGUStSOHiN4/33Mzczw
      /vH3ePSJJ2/aps9lGz8rQWo4Tj5P5n9+k9hTX8DRNL7/vWc48tQXr3sPza1im2UZAOnG2JkM
      2W/+BZHPHSFw52F+8uKL7BoYoLv35jjLqBAC23EpVU3y5Trlmrl8GTnzAxkA6fpZs7Nkv/kX
      NH3p1/EfPMD01CQXL5zjy1/9vW0rk2k5jKQWGJvJMzFXYDJdxLIcgn4PiWiAcMBLyO8hPfwd
      +gYflAGQro85McHCX36L+Fe+jHdwkNxCluee/i6f/9V/taVNH8OymU6XeH90nlOjc+TLBn3t
      MXZ3JXj4tj56WqMEfR5UVUFRFIQQTJ1/hpwqOPTwp699lsj1knOCG4NwXWpvv03x2e8T/O3f
      ZLRc4uR772GZJvc9+BD7Dx3akI6vEALHFVi2g+W4VOsWhXKdTKHGTLbETLbMfK5M3bRpb45w
      aKCVg/2ttMZD6Nq1x3bycyc599afcteT/wtVD8gASGsjhMDN51n4m79leGyEib23kKnXGNq3
      n1vvOExrW9t1VXwhBHXTZmwmz+xCefkyn6tg2S4eXcWjqQT9HqIhP8lYkM7mMO3NYdriYSLB
      tZ8VxqhmOfrCH9F213/gxILD2xPjMgDSR6tVq4xeuIB24iT6u+8y2t+Htn8/g0O30Ltr13Xv
      0uw4LmfHM7z83hgTcwUGuxKLFTuxeGmNhwj4brwpZTkO+VqVXKXE/Nv/lX/OdaAn7+L+/gHu
      7dslAyCtZpoGY8MjnHzvGNmzZ7l1Zo5bPvEJIr/8RTzR6A01cap1ix++NczbZ6fobonyqcP9
      7O1Nrmi2CCGoWhY108RwbKqmSc00qVoWddvCtB0sx8F07MXbro3pLN5nOQ6GbVM2DMqGge26
      xPx+Eukf8MjQfnbd9jtE/dc4MNaNkAHY2YQQZObneeuN15m4NEZXaxv9qVlaiiXiX/o1fPv2
      3VDFF0JwdjzD/3n+BPft7+LROweIBH0oCpQNg1MzKSZyC0zmc8wUiwCEvT58uk7Q6yXo9RD0
      ePHpOl5Nx6Npi7d1DY+q4dE+uHg1nbDfR9jrI+DxUEif5sLb/2Ox3a+tXKvIADQ4IQTTU5P8
      9JVXqJTL3PfgQ/RUKlS//wOCDzxA5LFfvOEjNxuWzf978RTjs3l+93OH6UpGl/82vpDlz378
      Moc6uxhMJulpitMRjRHwejdknoljG7zzz/+WAw/+ZyKJPav+LgPQoGzb5tLICG+89hMUReWh
      T36KDt1D8R+/ixII0PTrv4aWiN/QUt91BWfG0/ztCyd46NY+PnPvbrSlpo4QgjfHL/GdY+/y
      x498il2J5k3ZbWLkvW8jhMvuw1/laod5W9d2AKte4dSFS9x+aD8j588gfFF29/fIGWE7gBCC
      aqXCpdFRLpw9w+xMita2dh59/Ela/X5K//Qshdk5ok99Ad/+qzd3Lg9NOo67eO26uK7AclwM
      06ZQMZhOF5lMF5nJlsmXajRFAvzhF++hp/WDvYdd1+Xpk8c5NZPivzzxGRLBzdlbtJQbJj35
      Onc9+b+51jEO17UGsCyTC8Mj7N3TzaXxMqpTpmvP7uUZYTfDJOdGIoRYHJ50XYx6nXq9jlGv
      Ua/VqVYrVCoVquUy1WqFzHwa0zTp6+9naN8+unp60S2Lyg9foHL8OL7Hn6C+9wDZskmuXCdf
      rpMv1SlU6hQrJjXDom7aKAqoqoKmKKiqgqqArqn4vDqRoJfulig9LTHam8MkIgE8+so6YTo2
      f/WzN9AV+J17H8C7CQfJXfpyOPajP6D/9q8Sb7v9mg9b17t7PF5UBRRFx7RqckbYFhFCUKtW
      yaTnSc/Pk5lfvC6XSriug6Io+P0B/IEAgUAAfzBIKBgiGA6RaG4mGAwRT8QJhqOk8xUm5oq8
      8+MzDL9+jIIlUHsfhnMGzamzJGNB4hE/8bCfvrYYTWE/kaCPoM+D36ujqte/vs+Uy/y3V17k
      gf5Bjhw4uKl7ik6c+QciiT0kO+/8yPdZ1xqglEszPj1HorUDj1NF+GK0JhY7NLIPsDGEEJTL
      JeZnZ0lNTZGamiKfW0BVNZKtrbS0ttLS2kaytZVIJILu0VEU9ao/smE5jM/mOXphhnMTGcqF
      MuHUBJ2qxd5fuJ+B24ZIxIJ4dQ1du/prbNRnupCe5y9ff43fvOse7uju2dTKXyuleO/Fb3DP
      Z/8a3fvRzSvZCd5mQggWslkujY4wOT7O3EwKXffQ2t5OZ3c3nV3dxBMJfH7/mo6tWalbnByZ
      4+j5FONzBbpaohzuT7IrNYz+1huEbjtE5Ikn0KJbc3QGIQSvjgzz7KmTfO2Tv0BP0+acgF0I
      gesYpCdfZ+zE3zB4+Ku09j70c58nA7BNhBCMDl/kjVdfxTTqDO3bT09fH+0dnWuq7FcqVQ3e
      PZ/iZ6emyFfqHBpo465bOtjlF5ivvUbt6DF8hw4S/cyTaE1Nm/ipPiCEIFut8IPTpxjPLfD1
      Tz5K2LcZZ4EUlHOjTF34J7LTb5HouIuuoV8i2jzEWg7uLwOwxQzD4NSJ47z75pskkkkeePhh
      Oru611XhhRBkClWOXpjhnbMpKnWTOwZauW+gmY6wjpOaofzKj3HLZUKPPETw3ntRfL5NbeLk
      qlWGM2kuptOMZtNkKxUiPj+3d3fz+UO3oqsbUzdcx6JWTlHMXmBh5h2KmXN4fFG6hn6J1t5H
      ULW17xsEMgBbRgjBhbNneen5H7Jn717uvv+BVWcwEa6LqNdxS2XshSxuuYJbWbw41SppU+Gk
      FuNk3sEcn2BfeYbbgw4tHoEqBEoggBoIoCebCT30EJ5dfSibMDLnCkGhVuPC/BwnU9MMZ9Jo
      qsruZAtDra0MNLfQHArh3ZAD3Aoso0h2+m1mx16iWpzAH2oj0jxEouNuIondeHyx634fGYAt
      UK/XeP655yiXShx56ima4otHTBNCYE9PU3ntp1hTUzi5PIrXgxqOoDU3o4bD5F2Fn43lOFaE
      8GA/9x7o4faeJpo1B0XXUTweFH8AxevZ1CW87boMZ9IcnZzg/dQ0AHvb2rm1s4vdyRai62y2
      /bz3c+wamcnXmR37F2qlFInOe2jvf5RIYmjV7gw3QgZgEwkhGL14kee//yz3fuJBDt99D6qq
      4laqVN9+m8pPX0fxeQk//DDewQG0RAJF01go1nj3fIo3Tk1iOy73H+jm/gM9JKKBLSt3vlZj
      IrfAcCbNubk55ssldiUS3NnTy62dXTQFNv7kKUIIyrmLTJ59htzccZJd99E+8BjR5I3th/RR
      ZAA2SbVS4aUXnie3kOXIU79MPJHALVcoPv0MxvAwgcN3EHrwQbSWJELAzEKJo+dnOHZhBttx
      OTzUwQMHe2iNh1A34ccXgGnbFOt10uUS04U8qUKBqXyebLVMQPfQE08sN2s6ozH0Tfp9bavK
      3NhLTF/8Ppruo3vvF0l23Y+mb0aneSUZgA3mOA7vH3+PN179CXff/8DyUt84e5b8332H8KOf
      wnff/eTrNucmspy5lGZ0Jkck4OXOWzo4PNRJa1NwQ5sTlutSMQwm8zkuLWQZX1hgpligZllE
      /X5awxE6YzE6Y010xWI0h8L4dX3TD2kihEt64jVG3vs2zV330jX0eYLRzd1G8GEyABsoNT3F
      8889S3OyhU8/8SShcBhhWeSe+R6j75xi7pHHGTY0JuaKRENebulNsr+vhYHOOCG/lxv53W3H
      oWQYFOs1stUKU/k8k7kck/kcdcsi5PXSE4/TF2+mL5GgIxqj6YoTRm+1anGKc2/9Karm5ZZ7
      vkYg3P7zn7QJZABukGVZTI5f4r133yWfW+DTTx7BE04wMV9gNJXj/MlhijZ09bZxS2+Svb3N
      9HfE0ZYmaV/JFYKqaVIxDSqGSdk0liZ21CkbBqWlSR5l06BiGJiOg+0uzpkFiPh8RP0B4sEA
      PU3xxUs8QWRp/H27D1IlhKBmFLl49rtMXXiW/tu+Qrzz7sV9mhCAuPwfl/9/tdf44K9i+bmu
      cHFdd/FauLjCwRXu4g57S7cXzz0mcK94ngzAOjmuS7laZ3IqxfGT5zhzfoRCzSaY6CAYb6eU
      zRPOzNJRyzPQk+TWX3mSlr4uNFXFcR2KRp1MucxsqchcscRsqchCtULFNDFsC7/uIezzEfL6
      CPuuuHzo3yGvb3EXBlXDo6po6vXvyiCEWK4grhAIlq6XKoxYrjBwZaW7/Nyle3Fch6pZoWyW
      qRglykaZolEgU06Tq2bJFadwHIt4pBOvN4iqaCiKiqooKChL262WZmotl27lZ1JWPEZBUUBB
      RVVUVHXpevmioaoq2tJtRVlc6KgsflcKigzA1Vw+mFK2UGF8rkgqXWQuX2F6Pk+hYuLaJq3J
      OMmmEMlYkGavQnjsAtELp4lhEbrjdnx330WlqYmRbIaRTJrRbIZ0uUzI66UlEqE9EqU9GqU9
      EiURDBHyeQl4vOvu8F5e8tWsKunyPPPlORaqWQy7jmEbmI6BaZtYjonl2tiOhe3aWI6F7S7e
      dlxnudJcWSEXK4y6XNGWqtwH0wmXKq2yVCE1RSPoCxH2hgn7IoS8YSK+MEphjIXz36On7yGG
      bv0yvmDzBv9i16/hA+DYNulMlom5AmOzBSbmi8zl61SqdeKxEJ2JIJ3JCF0tMdriYdpbYvh9
      Ptx6nfqJk1TffBNjbp7SYD+ZoT1c8vsYzmYo1GqEvF4Gk0kGky0MNCfpiMbQbnDDlBCCdGWe
      i/PnODN3iqn8JEK4+HQfLeE2WsNtxIPNBDx+vLoPn+bDq3vxaF501YNH09FVD7rmwaMu3tbU
      xaWj69pY9TyuYyGEjevaCNdGuM6KJsqVzZMPqo/AdS1so4RlFDCNAla9QCF9Go8vyp67/oBQ
      rPeGPvtmaIgAXD7LeLlUIpPNkcrkmUqXGZstML1Qwx+K0tfZzJ7uZvraonS3RvF6NFDAdl0M
      26ZqGuQXFsjncmQnJpgevsi8ENTbWnFjMRLhML2JBLuTrQw2N9MU9KPAiubEcrPiimbEiusr
      HmM6JiWjRKleWLw2isyX5pgtpgj5wgy17GVf+0H64rvwaN6lpffVJ7EI4SJcC9uqYJsVzNoC
      Ri1DvTJHrTRNrZTCNAq4dh2PN4qq+1BUHVXVUVQdRbm8RXfp9Zduf6hxgqLqeHxRPP4YXl8M
      jy9GINpNuGlg2/sf13JdARCuw/snjoM3zKEDt6CwNQEQQiBcF9dxEI4DjoNtmpSLRWrFImal
      Qr1UplKpkjYs0jWHQsUgVzFJ1yFnQl3Vsb2A1yEa1Whu8uH3qViuTd2xMGwLnDq4Jo4wMRUL
      0zXBMfCoDmgurrBIhPzE/D78uoJHY6lpYWE7FgqgKgrq5aaDAAUBwgXXRghn8dq1Ea6FcKzl
      +y7/3aPqhLwhwh4/Id1HSPfT5I/SGkzgARy7hmvXcR1zaUltLS+x3ctLbeEALigaqqqje0Lo
      nhDeQAJfMIkv2EIw0kUg0oXHF0X3hFA2aJ+d6/yBF6+u+D/CXbxfCMAF1wXhIFwbjBLCrIBV
      RzgG2MbStQmuhXDs5e+Upe+ZpYtwFh9zXQFw7ALjEwaaXaB9z270pRlhlzsZsDjtDVieJXa1
      fwsheO6V1zkxmlvb94OCbVpYtRp23UCYFq4NpuLF1FSEJlBUh4hSI6GUiaslEmqJmFYioS+g
      eUyEurgq14SLJhxUXBRcUFwcReCoq78OBVARqGLpWlHQVX2pCaGhKxqaqqKhLL6WcJcroOtY
      uK6FcK1rDWysdrm9rSy+s6IocLktrmqLS2RVQ1U9qNrS0lrTUVTPyqW2utjJvCl8qOmE64BY
      DOribWepkitX9HuVxbWNoi7fVhQVVA1UHTxh8IZA94PmxVV0FI8fRfOC5sFFRdW9KJoHVB1X
      0VA0L6ruA82LULTrXQNYnDj+Pug+br31ACrXvwYoFLLk8pkP3XuV1aXCcsCUy98L4NHAowpU
      RSw97IOO2XJXTeGKDp56xWPUD1bnH7q+oUF56QpX+y0VFEX7oCKr2nLAt/p7v+4+gGXWEaoH
      r75Y6W/mPoAkXct1z0j2eP0bWQ5J2hY3SQNRkraHDIDU0GQApIYmAyA1NBkAqaHJAEgNTQZA
      amgyAFJDkwGQGpoMgNTQZACkhiYDIDW0DTs9x+UzlUjSTrJha4APnx7pantZX+2+q4Vmrc/d
      iffJz7v6cdfaI38tj7vR+zZsDXAj5wdrtHOLyc9789iwSfGStBNt0in6rk64DsMXz2MpPlqj
      Pqbnc+zePcjEpTE8wRgBxSBXsdm3dwjtBk7GdrNwbZOLwxfBE6LJrzCfqzDY38PYpQlC0QRB
      1aAiAvR3t213UTeEUSkycmmScFMSt5an5nroSkaYnJkj2dZJIT2Lo/vZt2dgu4u6bGvXTYpK
      f38/jmGQLdY4uLeHmbky/X3dmEaNqgEdsQD5mrGlxdosiuZhYNcuzLpBoWIy2J0kW3Lo7+nA
      MAyiTQlMo7rdxdww3kCY3q426rUyluoj5nNRggnam5uomzb9A/1Y5s31225tABNWDvUAAAGS
      SURBVFyHc+dH2HdgH9gWlVIZhMnIVIa9Q4NYlknNMDbsdDrbzbXqnB+ZZP/+IVzbolKtIswy
      l+ZLDA324fV6t7uIG6pazJLK1dkz0IdlGtTqJoX0NFUWT7l67uIl9u/du93FXGFLAyBw0VWF
      sbEJdvX3ki66dLdFURyDyel5+rpbcX1Rov6NOwPIdhIINBwujU/T19tF2faQbAoizArTs2km
      Jyaw6lXq9sejGyYUFbtWJJUu0JmMEYi3E/DplBbmSS+U0FTB2MTkdhdzBdkJlhrazTs+JUlb
      QAZAamgyANJNzaxXqdQMHNukUKpc83G1Wu26Xn9LtwNI0nqdfuN1zhoK97TqPHd8nt868gDp
      kkNLxMNktoy/luL9GQXMDAd272bX3oMEvWsfRZRrAOkmpxH0KqRq0BbWefWNdylOnuaFf3mF
      yfOnKWt+uvsG0YVDRK/y3sW5db26XANINzVfMMhAk59MxiAaiRDx2qSrgq62FlSPh6ZEG2dO
      j+CPJgiFQvjN9W1DksOgUkOTTSCpof1/zCcjrb2VUOEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
